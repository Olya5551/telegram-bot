from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext, CallbackQueryHandler
import random
from gtts import gTTS
import os

TOKEN = "7249434959:AAHHL5ohHRPf2wO_jyxs3ZdQWrJMPI1OkKA"

# –°–ø–∏—Å–æ–∫ —Ç–µ–º –¥–ª—è –æ–±—â–µ–Ω–∏—è
topics = [
    "üìñ –ö–∞–∫—É—é –ø–æ—Å–ª–µ–¥–Ω—é—é –∫–Ω–∏–≥—É —Ç—ã –ø—Ä–æ—á–∏—Ç–∞–ª?",
    "üåç –ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥ –∂–∏—Ç—å –≤ –ª—é–±–æ–π —Å—Ç—Ä–∞–Ω–µ, —á—Ç–æ –±—ã —Ç—ã –≤—ã–±—Ä–∞–ª?",
    "üí¨ –ö–∞–∫–æ–µ —Ç–≤–æ–µ –ª—é–±–∏–º–æ–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ?",
    "üé¨ –ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π —Ñ–∏–ª—å–º –∏ –ø–æ—á–µ–º—É?",
    "üçΩ –ö–∞–∫–æ–µ –±–ª—é–¥–æ –±—ã–ª–æ —Å–∞–º—ã–º –≤–∫—É—Å–Ω—ã–º –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏?"
]

# –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –¥–Ω—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ –ø–µ—Ä–µ–≤–æ–¥–æ–º
words = [
    {"word": "Serendipity", "translation": "—Å—á–∞—Å—Ç–ª–∏–≤–∞—è —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å", "examples": ["‚ú® –≠—Ç–æ –±—ã–ª–∞ —á–∏—Å—Ç–∞—è —É–¥–∞—á–∞, —á—Ç–æ –æ–Ω–∏ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å.", "üçÄ –ù–∞–π—Ç–∏ —ç—Ç—É –∫–Ω–∏–≥—É –±—ã–ª–æ –Ω–∞—Å—Ç–æ—è—â–∏–º –≤–µ–∑–µ–Ω–∏–µ–º!"]},
    {"word": "Eloquent", "translation": "–∫—Ä–∞—Å–Ω–æ—Ä–µ—á–∏–≤—ã–π", "examples": ["üó£ –û–Ω–∞ –ø—Ä–æ–∏–∑–Ω–µ—Å–ª–∞ –∫—Ä–∞—Å–Ω–æ—Ä–µ—á–∏–≤—É—é —Ä–µ—á—å.", "üì¢ –ï–≥–æ —Å–ª–æ–≤–∞ –±—ã–ª–∏ —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏ —Ç—Ä–æ–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏."]},
    {"word": "Oblivious", "translation": "–Ω–µ –æ–±—Ä–∞—â–∞—é—â–∏–π –≤–Ω–∏–º–∞–Ω–∏—è", "examples": ["üôâ –û–Ω –Ω–µ –∑–∞–º–µ—á–∞–ª —à—É–º–∞ –≤–æ–∫—Ä—É–≥.", "üö∂‚Äç‚ôÄÔ∏è –û–Ω–∞ –ø—Ä–æ—à–ª–∞ –º–∏–º–æ, –Ω–µ –∑–∞–º–µ—á–∞—è –≤–∑–≥–ª—è–¥–æ–≤."]},
    {"word": "Resilient", "translation": "—Å—Ç–æ–π–∫–∏–π, —É—Å—Ç–æ–π—á–∏–≤—ã–π", "examples": ["üí™ –û–Ω–∞ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ —Å—Ç–æ–π–∫–∞—è –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.", "üå± –≠—Ç–æ —Ä–∞—Å—Ç–µ–Ω–∏–µ –æ—á–µ–Ω—å —É—Å—Ç–æ–π—á–∏–≤–æ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –∫–ª–∏–º–∞—Ç–∞."]},
    {"word": "Diligent", "translation": "–ø—Ä–∏–ª–µ–∂–Ω—ã–π, —É—Å–µ—Ä–¥–Ω—ã–π", "examples": ["üìñ –û–Ω –±—ã–ª –ø—Ä–∏–ª–µ–∂–Ω—ã–º —É—á–µ–Ω–∏–∫–æ–º –∏ –≤—Å–µ–≥–¥–∞ –¥–µ–ª–∞–ª –¥–æ–º–∞—à–Ω—é—é —Ä–∞–±–æ—Ç—É.", "üíº –û–Ω–∞ –æ—á–µ–Ω—å —É—Å–µ—Ä–¥–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –¥–µ–¥–ª–∞–π–Ω—ã."]}
]

async def start(update: Update, context: CallbackContext) -> None:
    welcome_message = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BFF English Community Bot! üéâ\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ –≤ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π —Ñ–æ—Ä–º–µ. –í–æ—Ç —á—Ç–æ —è —É–º–µ—é: \n\n"
        "üó£ –ü—Ä–µ–¥–ª–æ–∂—É —Ç–µ–º—É –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞.\n"
        "üìñ –ü–æ–∫–∞–∂—É —Å–ª–æ–≤–æ –¥–Ω—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ–º.\n"
        "üß† –ü—Ä–æ–≤–µ–¥—É –≤–µ—Å–µ–ª—ã–π —Ç–µ—Å—Ç –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ.\n"
        "üìã –ü–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –≤—Ä–µ–º–µ–Ω–∞–º–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.\n"
        "‚úçÔ∏è –ó–∞–ø–∏—à—É —Ç–µ–±—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º!\n\n"
        "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∏–∂–µ! üöÄ"
    )
    await update.message.reply_text(welcome_message, reply_markup=main_menu())

async def word_of_the_day(update: Update, context: CallbackContext) -> None:
    word_data = random.choice(words)
    message = (f"üìö –°–ª–æ–≤–æ –¥–Ω—è: {word_data['word']} ({word_data['translation']})\n\n"
               f"‚úçÔ∏è –ü—Ä–∏–º–µ—Ä—ã:\n- {word_data['examples'][0]}\n- {word_data['examples'][1]}")
    
    await update.message.reply_text(message)
    
    tts = gTTS(text=word_data['word'], lang='en')
    tts.save("word.mp3")
    with open("word.mp3", "rb") as audio:
        await update.message.reply_voice(audio)
    os.remove("word.mp3")
    
    await update.message.reply_text("‚è∞ –•–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —Å–ª–æ–≤–æ –¥–Ω—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å?", 
                                   reply_markup=ReplyKeyboardMarkup([["–î–∞", "–ù–µ—Ç"], ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]], resize_keyboard=True, one_time_keyboard=True))

async def handle_message(update: Update, context: CallbackContext) -> None:
    text = update.message.text

    if text == "üó£ –¢–µ–º–∞ –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞":
        topic = random.choice(topics)
        await update.message.reply_text(f"üí¨ –í–æ—Ç —Ç–µ–º–∞ –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:\n\n{topic}")
    
    elif text == "–î–∞":
        await update.message.reply_text("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –Ø –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è.")
    
    elif text == "–ù–µ—Ç":
        await update.message.reply_text("üëç –•–æ—Ä–æ—à–æ! –¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤–∫–ª—é—á–∏—Ç—å —ç—Ç–æ –ø–æ–∑–∂–µ.")

    elif text == "üìñ –°–ª–æ–≤–æ –¥–Ω—è":
        await word_of_the_day(update, context)
    
    elif text == "‚úçÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ":
        signup_text = ("–ü–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –≤ BFF Community –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è —Å –æ–¥–Ω–∏–º –∏–∑ –Ω–∞—à–∏—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. "
                       "–î–ª—è —ç—Ç–æ–≥–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –ø–æ –¥–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ: "
                       "https://docs.google.com/forms/d/e/1FAIpQLSdDutaMxpkQ94dO7koAdd7Impo21sBdVzeRlsBc6SwVMfjzdQ/viewform?usp=sharing")
        await update.message.reply_text(signup_text)

    elif text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await update.message.reply_text("üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!", reply_markup=main_menu())

def main_menu():
    keyboard = [
        ["üó£ –¢–µ–º–∞ –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞", "üìñ –°–ª–æ–≤–æ –¥–Ω—è"],
        ["üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞", "üìã –¢–µ—Å—Ç: –≤—Ä–µ–º–µ–Ω–∞"],
        ["‚úçÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ"],
        ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)

def main():
    application = Application.builder().token(TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("word_of_the_day", word_of_the_day))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    application.run_polling()

if __name__ == "__main__":
    main()
